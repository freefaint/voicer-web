{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","name","setName","logo","img","setImg","result","setResult","useEffect","voice","webkitSpeechRecognition","lang","continious","interimResults","onerror","err","console","log","onresult","e","results","Object","keys","filter","i","parseInt","toString","map","transcript","onend","setTimeout","start","prod","products","find","names","j","indexOf","className","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0ilBAAe,MAA0B,iC,sBCoE1BA,MAzDf,WAAe,MAEaC,mBAAiB,IAF9B,mBAELC,EAFK,KAECC,EAFD,OAGWF,mBAAiBG,GAH5B,mBAGLC,EAHK,KAGAC,EAHA,OAIiBL,mBAAiB,IAJlC,mBAILM,EAJK,KAIGC,EAJH,KA6Cb,OAvCAC,qBAAU,WAER,IAAMC,EAAQ,IAAIC,wBAElBD,EAAME,KAAO,QACbF,EAAMG,YAAa,EACnBH,EAAMI,gBAAiB,EAEvBJ,EAAMK,QAAU,SAACC,GACfC,QAAQC,IAAI,QAASF,IAGvBN,EAAMS,SAAW,SAACC,GAChB,IAAMC,EAAUC,OAAOC,KAAKH,EAAEC,QAAQ,IAAIG,QAAO,SAAAC,GAAC,OAAIC,SAASD,EAAG,IAAIE,aAAeF,KAAGG,KAAI,SAAAH,GAAC,OAAIL,EAAEC,QAAQ,GAAGI,GAAGI,cAGjHrB,EAAUa,EAAQ,IAClBJ,QAAQC,IAAIG,IAGdX,EAAMoB,MAAQ,WACZb,QAAQC,IAAI,OAEZa,YAAW,kBAAMrB,EAAMsB,UAAS,MAGlCtB,EAAMsB,UACL,IAEHvB,qBAAU,WACR,IAAMwB,EAAOC,EAASC,MAAK,SAAAV,GAAC,OAAIA,EAAEW,MAAMD,MAAK,SAAAE,GAAC,OAA2B,IAAvB9B,EAAO+B,QAAQD,SAE7DJ,IACF9B,EAAQ8B,EAAK/B,MACbI,EAAO2B,EAAK5B,QAGb,CAAEE,IAGH,qBAAKgC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKnC,EAAKkC,UAAU,WAAWE,IAAI,SACxC,8BACGvC,UC/CIwC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.df437adc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport products from './prods.json';\n\nconst check = (results: string[]) => {\n  \n}\n\nfunction App() {\n  // const [ text, setText ] = useState<string | undefined>();\n  const [ name, setName ] = useState<string>('');\n  const [ img, setImg ] = useState<string>(logo);\n  const [ result, setResult ] = useState<string>('');\n\n  useEffect(() => {\n    // @ts-ignore\n    const voice = new webkitSpeechRecognition();\n\n    voice.lang = 'ru-RU';\n    voice.continious = true;\n    voice.interimResults = true;\n\n    voice.onerror = (err: any) => {\n      console.log('error', err);\n    }\n\n    voice.onresult = (e: any) => {\n      const results = Object.keys(e.results[0]).filter(i => parseInt(i, 10).toString() === i).map(i => e.results[0][i].transcript);\n      \n      // check(results);\n      setResult(results[0]);\n      console.log(results);\n    }\n\n    voice.onend = () => {\n      console.log('end');\n\n      setTimeout(() => voice.start(), 100);\n    }\n\n    voice.start();\n  }, []);\n\n  useEffect(() => {\n    const prod = products.find(i => i.names.find(j => result.indexOf(j) !== -1));\n\n    if (prod) {\n      setName(prod.name);\n      setImg(prod.img);\n    }\n\n  }, [ result ])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={img} className=\"App-logo\" alt=\"logo\" />\n        <pre>\n          {name}\n        </pre>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}