{"version":3,"sources":["App.tsx","hooks/useSpeech.ts","hooks/useDB.ts","index.tsx"],"names":["App","useState","showText","setShowText","speech","result","setResult","useEffect","voice","webkitSpeechRecognition","lang","continious","interimResults","onerror","err","onresult","e","results","Object","keys","filter","i","parseInt","toString","map","transcript","final","isFinal","onend","setTimeout","start","useSpeech","db","data","setDb","setInterval","a","fetch","then","resp","json","console","log","useDB","products","product","setProduct","target","find","names","j","k","indexOf","className","style","backgroundImage","img","name","cost","description","weight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAqEeA,MAjDf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACLC,EADK,KACKC,EADL,KAGPC,ECrBiB,WAAO,IAAD,EACCH,qBADD,mBACrBI,EADqB,KACbC,EADa,KA8B7B,OA3BAC,qBAAU,WAER,IAAMC,EAAQ,IAAIC,wBAElBD,EAAME,KAAO,QACbF,EAAMG,YAAa,EACnBH,EAAMI,gBAAiB,EAEvBJ,EAAMK,QAAU,SAACC,KAIjBN,EAAMO,SAAW,SAACC,GAChB,IAAMC,EAAUC,OAAOC,KAAKH,EAAEC,QAAQ,IAAIG,QAAO,SAAAC,GAAC,OAAIC,SAASD,EAAG,IAAIE,aAAeF,KAAGG,KAAI,SAAAH,GAAC,OAAIL,EAAEC,QAAQ,GAAGI,GAAGI,cAEjHnB,EAAU,CAAEW,UAASS,MAAOV,EAAEC,QAAQ,GAAGU,WAG3CnB,EAAMoB,MAAQ,WAGZC,YAAW,kBAAMrB,EAAMsB,UAAS,MAGlCtB,EAAMsB,UACL,IAEIzB,EDTQ0B,GACTC,EErBa,SAAIC,GAAe,IAAD,EACfhC,mBAAcgC,GADC,mBAC7BD,EAD6B,KACzBE,EADyB,KAarC,OAVA3B,qBAAU,WACR4B,YAAW,sBAAC,sBAAAC,EAAA,2EAERF,EAFQ,SAEIG,MAAM,kBAAkBC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAF9C,kFAIRC,QAAQC,IAAI,WAJJ,yDAMT,OACF,IAEIV,EFQIW,CAAeC,GAEpBX,EAAkBW,GAAYZ,EANvB,EAQmB/B,mBAAkB2C,EAAS,IAR9C,mBAQLC,EARK,KAQIC,EARJ,KAwBb,OAdAvC,qBAAU,WACRkC,QAAQC,IAAItC,GACZ,IAAM2C,EAASd,EAAKe,MAAK,SAAA3B,GAAC,OAAIA,EAAE4B,MAAMD,MAAK,SAAAE,GAAC,cAAI9C,QAAJ,IAAIA,OAAJ,EAAIA,EAAQa,QAAQ+B,MAAK,SAAAG,GAAC,OAAsB,IAAlBA,EAAEC,QAAQF,YAEhFH,GACFD,EAAWC,IAGH,OAAN3C,QAAM,IAANA,OAAA,EAAAA,EAAQsB,SAAR,OAAiBtB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAQa,QAAQ+B,MAAK,SAAA3B,GAAC,OAAwC,IAApCA,EAAE+B,QAAQ,0GACvDjD,GAAY,SAAAD,GAAQ,OAAKA,OAG1B,CAAEE,EAAQ4B,EAAI7B,EAAa8B,IAG5B,qBAAKoB,UAAU,gCAAgCC,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAQW,IAAjB,MAAvE,SACGtD,GACC,qCACE,sBAAKmD,UAAU,eAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BR,EAAQY,OACrC,qBAAKJ,UAAU,iBAAf,oBAGF,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,cAAf,SAA8BR,EAAQa,YAI1C,sBAAKL,UAAU,iCAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BR,EAAQc,cACrC,qBAAKN,UAAU,eAAf,SAA+BR,EAAQe,kBGxDnDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ef2f2808.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { useDB } from './hooks/useDB';\nimport { useSpeech } from './hooks/useSpeech';\n\nimport products from './products.json';\n\ninterface Product {\n  id: string;\n  name: string;\n  cost: string;\n  weight: string;\n  category: string;\n  age: string;\n  description: string;\n  textcolor: string;\n  names: string[];\n  img: string;\n}\n\nfunction App() {\n  const [ showText, setShowText ] = useState(true);\n\n  const speech = useSpeech();\n  const db = useDB<Product>(products);\n\n  const data: Product[] = products || db;\n\n  const [ product, setProduct ] = useState<Product>(products[0]);\n\n  useEffect(() => {\n    console.log(speech);\n    const target = data.find(i => i.names.find(j => speech?.results.find(k => k.indexOf(j) !== -1)));\n\n    if (target) {\n      setProduct(target);\n    }\n    \n    if (speech?.final && speech?.results.find(i => i.indexOf('показать название') !== -1)) {\n      setShowText(showText => !showText);\n    }\n\n  }, [ speech, db, setShowText, data ])\n\n  return  (\n    <div className=\"Block Column JustifySpace App\" style={{ backgroundImage: `url(${product.img})` }}>\n      {showText && (\n        <>\n          <div className=\"Block Column\">\n            <div className=\"Block JustifySpace\">\n              <div className=\"Block Name\">{product.name}</div>\n              <div className=\"Block Eighteen\">18+</div>\n            </div>\n            \n            <div className=\"Block JustifyEnd\">\n              <div className=\"Block Price\">{product.cost}</div>\n            </div>\n          </div>\n\n          <div className=\"Block JustifySpace AlignCenter\">\n            <div className=\"Block Desc\">{product.description}</div>\n            <div className=\"Block Weight\">{product.weight}</div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport const useSpeech = () => {\n  const [ result, setResult ] = useState<{ results: string[], final: boolean }>();\n\n  useEffect(() => {\n    // @ts-ignore\n    const voice = new webkitSpeechRecognition();\n\n    voice.lang = 'ru-RU';\n    voice.continious = true;\n    voice.interimResults = true;\n\n    voice.onerror = (err: any) => {\n      // console.log('error', err);\n    }\n\n    voice.onresult = (e: any) => {\n      const results = Object.keys(e.results[0]).filter(i => parseInt(i, 10).toString() === i).map(i => e.results[0][i].transcript);\n      \n      setResult({ results, final: e.results[0].isFinal });\n    }\n\n    voice.onend = () => {\n      // console.log('end');\n\n      setTimeout(() => voice.start(), 100);\n    }\n\n    voice.start();\n  }, []);\n\n  return result;\n}","import { useEffect, useState } from \"react\";\n\n\nexport const useDB = <T>(data: T[]) => {\n  const [ db, setDb ] = useState<T[]>(data);\n\n  useEffect(() => {\n    setInterval(async () => {\n      try {\n        setDb(await fetch('/products.json').then(resp => resp.json()));\n      } catch (e) {\n        console.log('no data');\n      }\n    }, 10000);\n  }, []);\n\n  return db;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}